@using PingItWebsite.Models;

<head>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>
<h3 align="Center">User Performance Test Averages</h3>
<table>
    <tr>
        <td>Key</td>
        <td>URL</td>
        <td>Provider</td>
        <td>State</td>
        <td>City</td>
        <td>Speed (Mbps)</td>
        <td>Load Time (s)</td>
        <td>Score</td>
    </tr>
    @foreach (UserTestAvgs uta in Model)
    {
        <tr>
            <td>@uta.key.ToString()</td>
            <td>@uta.url</td>
            <td>@uta.provider</td>
            <td>@uta.state</td>
            <td>@uta.city</td>
            <td>@uta.speed</td>
            <td>@uta.loadtime</td>
            <td>@uta.score</td>
        </tr>
    }
</table>
<p></p>
<p></p>
<p></p>
<div id="loadtimeChart" style="width: 50%; height: 300px;display: inline-block;"></div>
<div id="speedChart" style="width: 50%; height: 300px;display: inline-block;"></div><br/>
<div id="scoreChart" style="width: 50%; height: 300px;display: inline-block;"></div><br/>

<script type="text/javascript">
    var chart1 = new CanvasJS.Chart("loadtimeChart", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Average Load Time"
        },
        axisX: {
            title: "Key",
            interval: 1
        },
        axisY: {
            title: "Load Time (Seconds)"
        },
        data: [
            {
                type: "column", 
                dataPoints: @Html.Raw(ViewBag.Loadtime),
            }
        ]
    });
    var chart2 = new CanvasJS.Chart("speedChart", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Average Speed"
        },
        axisX: {
            title: "Key",
            interval: 1
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "column", 
                dataPoints: @Html.Raw(ViewBag.Speed),
            }
        ]
    });
    var chart3 = new CanvasJS.Chart("scoreChart", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Average Score"
        },
        axisX: {
            title: "Key",
            interval: 1
        },
        axisY: {
            title: "Score (Out of 100)"
        },
        data: [
            {
                type: "column", 
                dataPoints: @Html.Raw(ViewBag.Score),
            }
        ]
    });
    chart1.render();
    chart2.render();
    chart3.render();
</script>
