@using PingItWebsite.Models;

<h3 align="Center">Key Table</h3>
<table>
    <tr>
        <td>Key</td>
        <td>City</td>
        <td>State</td>
        <td>Provider</td>
    </tr>
    @foreach (UserTimePlot utp in Model)
    {
        if (utp.key != null)
        {

            <tr>
                <td>@utp.key.key.ToString()</td>
                <td>@utp.key.city</td>
                <td>@utp.key.state</td>
                <td>@utp.key.provider</td>
            </tr>
        }

    }
</table>
<p></p>
<p></p>
<p></p>
<h3 align="Center">User Performance Tests' Speed and Loadtime Over Time</h3>
<table>
    <tr>
        <td>Rank/Key</td>
        <td>Date</td>
        <td>City</td>
        <td>State</td>
        <td>Provider</td>
        <td>Speed (Mbps)</td>
        <td>Load Time (s)</td>
    </tr>
    @foreach (UserTimePlot utp in Model)
    {
        <tr>
            <td>@utp.rank.ToString()</td>
            <td>@utp.date.ToString()</td>
            <td>@utp.city</td>
            <td>@utp.state</td>
            <td>@utp.provider</td>
            <td>@utp.speed</td>
            <td>@utp.loadtime</td>
        </tr>
    }
</table>
<p></p>
<p></p>
<p></p>
<h3 align="center">Key 1</h3>
<div id="chart1" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="chart6" style="width: 45%; height: 300px;display: inline-block;"></div>
<p></p>
<p></p>
<p></p>
<h3 align="center">Key 2</h3>
<div id="chart2" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="chart7" style="width: 45%; height: 300px;display: inline-block;"></div>
<p></p>
<p></p>
<p></p>
<h3 align="center">Key 3</h3>
<div id="chart3" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="chart8" style="width: 45%; height: 300px;display: inline-block;"></div>
<p></p>
<p></p>
<p></p>
<h3 align="center">Key 4</h3>
<div id="chart4" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="chart9" style="width: 45%; height: 300px;display: inline-block;"></div>
<p></p>
<p></p>
<p></p>
<h3 align="center">Key 5</h3>
<div id="chart5" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="chart10" style="width: 45%; height: 300px;display: inline-block;"></div>
<script type="text/javascript">
    var chart1 = new CanvasJS.Chart("chart1", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Speed Over Time"
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Speed1),
            }
        ]
    });
    var chart2 = new CanvasJS.Chart("chart2", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Speed Over Time"
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Speed2),
            }
        ]
    });
    var chart3 = new CanvasJS.Chart("chart3", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Speed Over Time"
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Speed3),
            }
        ]
    });
    var chart4 = new CanvasJS.Chart("chart4", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Speed Over Time"
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Speed4),
            }
        ]
    });
    var chart5 = new CanvasJS.Chart("chart5", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Speed Over Time"
        },
        axisY: {
            title: "Speed (Mbps)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Speed5),
            }
        ]
    });
    var chart6 = new CanvasJS.Chart("chart6", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Loadtime Over Time"
        },
        axisY: {
            title: "Loadtime (seconds)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Loadtime6),
            }
        ]
    });
    var chart7 = new CanvasJS.Chart("chart7", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Loadtime Over Time"
        },
        axisY: {
            title: "Loadtime (seconds)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Loadtime7),
            }
        ]
    });
    var chart8 = new CanvasJS.Chart("chart8", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Loadtime Over Time"
        },
        axisY: {
            title: "Loadtime (seconds)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Loadtime8),
            }
        ]
    });
    var chart9 = new CanvasJS.Chart("chart9", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Loadtime Over Time"
        },
        axisY: {
            title: "Loadtime (seconds)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Loadtime9),
            }
        ]
    });
    var chart10 = new CanvasJS.Chart("chart10", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Loadtime Over Time"
        },
        axisY: {
            title: "Loadtime (seconds)"
        },
        data: [
            {
                type: "line", //change type to bar, line, area, pie, etc
                xValueType: "dateTime",
                dataPoints:  @Html.Raw(ViewBag.Loadtime10),
            }
        ]
    });
    chart1.render();
    chart2.render();
    chart3.render();
    chart4.render();
    chart5.render();
    chart6.render();
    chart7.render();
    chart8.render();
    chart9.render();
    chart10.render();
</script>
